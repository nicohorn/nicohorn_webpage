generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["next_auth", "public"]
}

model users {
  id         String      @id @default(uuid()) @db.Uuid
  name       String      @db.Text
  email      String      @db.Text @unique
  image      String?     @db.Text
  role       String      @db.Text
  last_login DateTime?   @db.Timestamptz()
 

  @@schema("next_auth")
  
}

model accounts {
  id                     String       @id @default(uuid()) @db.Uuid
  type                   String       @db.Text
  provider               String       @db.Text
  providerAccountId      String       @db.Text
  refresh_token          String?      @db.Text
  access_token           String       @db.Text
  expires_at             Int          @db.Integer
  token_type             String       @db.Text
  scope                  String       @db.Text
  id_token               String       @db.Text
  session_state          String?      @db.Text
  oauth_token_secret     String?      @db.Text
  oauth_token            String?      @db.Text
  userId                 String       @db.Uuid

  @@schema("next_auth")
  
}

model sessions {

  id            String      @id @default(uuid()) @db.Uuid
  expires       DateTime    @db.Timestamptz
  sessionToken  String      @db.Text
  userId        String      @db.Uuid

  @@schema("next_auth")
}

model verification_tokens {

  token        String       @id @db.Text
  identifier   String       @db.Text
  expires      DateTime     @db.Timestamptz()


  @@schema("next_auth")
}

model blog_entries {
  id            String     @id @default(uuid()) @db.Uuid
  created_at    DateTime
  edited_at     DateTime
  author_id     String 
  author_name   String
  title         String
  content       String
  description   String
  cover_image   String
  node          String?
  lang          String
  tags          blog_entries_on_tags[]
  
  
  @@schema("public")
}

model blog_tags{
  id      String    @id @default(uuid()) @db.Uuid
  name    String
  posts   blog_entries_on_tags[]

  @@schema("public")
}

model blog_entries_on_tags{

  blog_entry      blog_entries  @relation(fields: [blog_entry_id], references: [id])
  blog_entry_id   String        @db.Uuid
  blog_tag        blog_tags     @relation(fields: [blog_tag_id], references: [id])
  blog_tag_id     String        @db.Uuid      
       


  @@id([blog_entry_id, blog_tag_id])
  @@schema("public")

}

model projects{
  id                    String     @id @default(uuid()) @db.Uuid
  created_at            DateTime
  project_name          String
  description           String
  project_items         Json
  cover_image           String

  @@schema("public")
}




